		Inofficial LambdaMOO Beginners Quick Reference
	============================================================
 
This is a compilation of all help topics available to the beginner, together 
with some short explanation for every item. 
Type 'help <topic>' to get the info. 
The items below doubly underlined headers (like this: ========) are help topics
only, they cannot be used as a command.

summary
============
help        -- get helpful texts & command descriptions
introduction -- what's going on here and some basic commands
index       -- index into the help system

players     -- setting characteristics of yourself
movement    -- moving yourself between rooms
communication -- communicating with other players
manipulation -- moving or using other objects
miscellaneous -- commands that don't fit anywhere else

building    -- extending the MOO
programming -- writing code in the MOO programming language
editors     -- editing text and code in the MOO
tinymud     -- a list of equivalences between MOO and TinyMUD concepts/commands

wizards     -- what are wizards?        
wizard-list -- current list of LambdaMOO wizards
@arb        -- current list of people on the Architecture Review Board 

LambdaMOO   -- the `theme' of LambdaMOO, what new building should be like
manners     -- the commonly-accepted rules of behavior on this MUD
cracking    -- policy regarding system security holes

help/indices
----------------
help/information/? -- display (hopefully) helpful text
index          -- list these:     
lmoo-index     -- LambdaMOO-Specific Help Topics (#3223)
gen-index      -- General Help Topics (#145)
full-index     -- EVERYTHING

system
-----------------
@who     -- finding out who is currently logged in
@lastlog -- finding out when some player last connected to the MOO
@wrap    -- adding word-wrap to the lines you see
@linelength 
@more [rest|flush] -- display suspended output
@pagelength         
@version -- printing the MOO server version number
@memory  -- gives info about server memory usage. useless for non-wizards.
@uptime  -- amount of time since the last restart of the server.         

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
players
------------
help registration -- explain how to get a character       
@describe -- setting what others see when they look at you
@gender   -- changing your player's gender
@password -- changing your player's password
@sethome  -- changing your designated home room
@rename   -- changing your name and/or aliases
@who      -- finding out who is currently logged in
@lastlog  -- finding out when some player last connected to the MOO
@quit     -- quit playing session             

movement
------------
go                         - move
home                       - teleport to your designated home room
@go <location>             - teleport yourself to a given location
@join <player>             - teleport yourself to a player's location

manipulation
----------------
get/take   -- pick an object up and place it in your inventory
get/take/remove from -- move object from inside container into your inventory.
drop/throw -- remove an object from your inventory and place it in the room
put/insert -- take an object from your inventory and place it in a container
give/hand  -- hand an object to some other player
@move <obj> to <location>  -- teleport an object to a given location
@eject     -- expel sth unwanted from your room         

informational
-----------------
look	   -- see what an object looks like
inventory  -- print list of things carried          
whereis    -- locating other players
@examine   -- print useful of information about the object
@contents  -- print contents of an object          
@locations -- print names and object numbers of all containing objects.
@parents   -- print names and object numbers of all ancestors.
@find #<object> - locate an object by number
@find <player>  - locate a player
@find :<verb>   - locate a verb on an object in your vicinity

communication
---------------
say/"    -- talking to the other connected players in the room
whisper  -- talking privately to someone in the same room
page     -- yelling to someone anywhere in the MOO
emote/:/:: -- non-verbal communication with others in the same room
news     -- reading the wizards' most recent set of general announcements
@gripe   -- sending complaints to the wizards
@typo @bug @idea @suggest @comment
         -- sending complaints/ideas to the owner of the current room
help gagging  -- screening out noise generated by certain other players
help mail -- the MOO email system... see below
help security -- facilities for detecting forged messages and eavesdropping.
help notes -- reading, writing, encrypting notes 

other help is available on
==============================
keys                -- sort of regular expressions
key-representation  
pronouns            -- useful, read this!

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
building
============
creation -- making, unmaking, and listing your rooms, exits, and other objects
topology -- making and listing the connections between rooms and exits
descriptions -- setting the names and descriptive texts for new objects
locking -- controlling use of and access to your objects
messages -- special descriptive texts
containers -- objects that can hold sth (e.g. yourself)         
rooms -- places

creation
------------
@dig -- conveniently building new rooms and exits
@create -- making other kinds of objects
@recycle -- destroying objects you no longer want
@recreate -- This is a combination of @create and @chparent.
@quota -- determining how many more objects you can build
@count -- determining how many objects you already own
@audit -- listing all of your objects
@add-owned -- adds an object to your .owned_objects property
@sort-owned -- sorts your .owned_objects property
@verify-owned -- verifies your .owned_objects property
@classes -- listing all of the public classes available for your use
@realm -- listing the parenting tree for objects owned by one or more players
@move -- moving your objects from place to place

topology
-----------
@dig -- creating new rooms and exits
@add-exit -- adding other players' exits from your rooms
@add-entrance -- adding other player's entrances to your rooms
@remove-entrance    
@remove-exit        
@exits -- listing all of the conventional exits from your rooms
@entrances -- listing all of the conventional entrances to your rooms
@resident -- listing or changing the residents of your rooms

descriptions
---------------
@rename -- setting the name and aliases of your objects
@describe -- setting what others see when they look at your objects
@messages -- listing and setting the other descriptive texts on an object
help messages

locking
-----------
@lock -- restricting use of and access to your objects    
@unlock -- unrestricting use of and access to your objects

messages
============
container-messages -- the messages on objects that can contain other objects
exit-messages -- the messages on exit objects
thing-messages -- the messages on objects that can be taken and dropped
room-messages   
teleport-messages 

containers          
--------------
put -- putting an object into a container
remove -- taking an object out of a container
@lock_for_open -- setting the lock for opening a container
@unlock_for_open -- clearing the lock
@create
help container-messages
@opacity
editors
-----------
@edit     <object>:<verb>    invokes the Verb Editor (edits verb code)
@notedit  <note_object>      invokes the Note Editor (edits note text)
@notedit  <object>.<prop>    invokes the Note Editor (edits text property)
@send     <list of recipients>        invokes the Mailer (edits a mail msg)
@answer   [<msg_number>] [<flags>...] invokes the Mailer (edits a reply)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


more on communication:

mail
--------
@mail     -- seeing a table of contents for a collection of email messages
@read     -- reading individual messages 
@next     -- reading the 'next'     message
@prev     -- reading the 'previous' message
@send     -- composing and sending a message to other players
@answer/@reply -- replying to one of the messages in a collection
@forward  -- resending one of the messages in a collection somewhere else
@rmmail   -- discarding some subset of a collection
@unrmmail -- undoing the most recent @rmm on a collection
@renumber -- renumbering the messages in a collection
@mail-option -- describes and sets various customization flags
help zombie-messages  
help message-sequences   
help mail-forwarding -- describes mail forwarding
help message-sequences -- describes message-sequences arguments to @mail, @read, @rmm, and @answer.

For viewing collections other from your own, the following commands are useful:
@rn          -- list those collections that have new messages on them
@subscribe   -- indicate that you want @rn to report on a given collection
                  and add yourself to its .mail_notify list
@skip        -- ignore any remaining new messages in a given collection
@unsubscribe -- ignore a given collection entirely from now on.
                  and remove yourself from its .mail_notify list

notes
--------
read -- reading the text on the note
write -- adding text to a note
erase -- removing all the text from a note
delete -- deleting one line of text from a note
@notedit -- general editing on the text of a note
encrypt -- restricting who can read a note
decrypt -- undoing a previous encryption
help letters -- on special 'letter' notes
burn -- Destroy the named letter irretrievably.

gagging
-----------
@gag -- add one or more players to your gag list
@ungag -- remove a player from your gag list
@listgag/@gaglist -- list the players you currently have gagged

spoofing/security       
----------------------------
@paranoid -- keeping a record of messages your character hears.
@check    -- looking at that record to determine responsibility for messages.
@sweep    -- checking who is listening in on your conversation.
help privacy             

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-policies
============
LambdaMOO -- the `theme' of LambdaMOO, what new building should be like
manners -- the commonly-accepted rules of behavior on this MUD
cracking -- policy regarding system security holes
common_quota        
quota-policy
negative-quota       
multiple-characters 
privacy             
In addition to these help topics, there is a README for NewMOOers. It can be 
found in The Living Room, use <read README> to read it.

spelling
-----------
@spell a word or phrase - Spell check a word or phrase.
@spell thing.prop - Spellcheck property. value must be string or lst of strngs.
@spell thing:verb - Spellcheck verb. Only quoted strings in verb are checked.
@spellproperties object - Spell check all text properties of an object.
@spellmessages object - Spell check only message properties of an object.
@cspell word - Spellcheck word, offer suggestions about right spelling.
@complete prefix - List all words in dictionary with given prefix.
@addword word - Add a word to your personal dictionary.
@rmword word - Remove a word from your personal dictionary.
@adddict word - Add a word to the global dictionary.
@rmdict word - Remove a word from the global dictionary.

rooms
---------
@rooms                     - see a list of the rooms you know by name
@addr*oom <name> <number>  - remember a room by name
@rmr*oom  <name>           - forget about a room's name

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


I compiled this for my own use in the first place, but thought that others
might like to use it, too, so I posted it. So don't expect too much.
If you think it's garbage or have a suggestion, feel free to tell me so.

Rainer Blome (Saubstauger)  email: blome@namu01.gwdg.de
